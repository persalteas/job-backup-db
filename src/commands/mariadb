#!/usr/bin/env bash

set -e
set +o pipefail
. "$BAGCLI_WORKDIR/common"

cli_help_deploy() {
  echo "
Command: mariadb
Usage:
  mariadb <database_name>"
  exit 1
}

[ -z "$1" ] && cli_help_deploy

export MARIADB_DATABASE="$1"
export MARIADB_HOST="$BAGCLI_DATABASE_HOST"
export MARIADB_USER="$BAGCLI_DATABASE_USER"
export MARIADB_TCP_PORT="$BAGCLI_DATABASE_PORT"
export MARIADB_PWD="$BAGCLI_DATABASE_PASS"

cli_log "Backup database $MARIADB_DATABASE with user $MARIADB_USER BEGIN"

cli_log "ENV variables"
env | grep "BAGCLI_*" | grep -v "PASS"

mysqlDump() {
  cli_log "Executing mysqldump"
  mysqldump \
    --protocol=TCP \
    --max-allowed-packet=1GB \
    --default-character-set=utf8mb4 \
    --host "$MARIADB_HOST" \
    --user "$MARIADB_USER" \
    --port "$MARIADB_TCP_PORT" \
    -p"$MARIADB_PWD" \
    --quick \
    --single-transaction \
    --skip-lock-tables \
    --add-drop-table \
    --skip-add-locks \
    --skip-comments \
    --skip-disable-keys \
    --skip-set-charset \
    --no-tablespaces \
    "$MARIADB_DATABASE" | gzip -9 -c > /tmp/backup.sql.gz
  return "${PIPESTATUS[0]}"
}

removeOldBackup() {
  cli_log "Removing backups older than $BAGCLI_RETENTION_TIME"
  rclone_delete --min-age "$BAGCLI_RETENTION_TIME" backup:"$BAGCLI_REMOTE_PATH"/ || true
}

copyToS3() {
  cli_log "Copy of local dump to remote"
  rclone_cp /tmp/backup.sql.gz backup:"$BAGCLI_REMOTE_PATH"/mariadb."${MARIADB_DATABASE}"_"$(date +'%d_%m_%Y__%H_%M_%S')".sql.gz
  return "${PIPESTATUS[0]}"
}

clearTmpFolder() {
  cli_log "Cleaning tmp folder"
  rm -rf /tmp/backup.sql.gz
}

checkSucceed() {
  if [ $? -gt 0 ]; then
    cli_log "[KO] $?"
    exit "$1"
  fi
}

main(){
  mysqlDump
  checkSucceed "mysqldump failed"

  removeOldBackup
  checkSucceed "removing old backups failed"

  copyToS3
  checkSucceed "copying to the s3 bucket failed"

  clearTmpFolder
  checkSucceed "cleaning temporary folder failed"

  heartbeatPing
  cli_log "job succeed"

  postToWebhook
  cli_log "post to WebHook succeed"
}

main
